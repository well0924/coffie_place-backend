plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.9'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // https://mvnrepository.com/artifact/org.thymeleaf/thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    // https://mvnrepository.com/artifact/org.thymeleaf.extras/thymeleaf-extras-springsecurity5
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
    //thymeleaf layout
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // aop
    annotationProcessor 'org.springframework.boot:spring-boot-starter-aop'
    // bootstrap,jquery,fontawesome
    implementation 'org.webjars.bower:jquery:3.6.3'
    implementation 'org.webjars:jquery-form:4.2.2'
    implementation 'org.webjars:font-awesome:6.1.1'
    implementation 'org.webjars:bootstrap:5.2.0'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    // security
    implementation 'org.springframework.boot:spring-boot-starter-security:3.0.1'
    // Swagger
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'
    // jackson
    implementation 'com.fasterxml.jackson.core:jackson-core:2.14.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.1'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.1'
    // 직렬화 이슈로 추가한 라이브러리
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.12.7'
    // ImageScaling
    implementation 'com.jhlabs:filters:2.0.235-1'
    implementation 'com.mortennobel:java-image-scaling:0.8.6'
    // apache poi
    implementation 'org.apache.poi:poi:5.0.0'
    implementation 'org.apache.poi:poi-ooxml:5.0.0'
    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis:3.0.4'
    // querydsl
    implementation "com.querydsl:querydsl-jpa"
    implementation "com.querydsl:querydsl-core"
    implementation "com.querydsl:querydsl-collections"
    // spring retry
    implementation 'org.springframework.retry:spring-retry:2.0.1'

    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jpa" // querydsl JPAAnnotationProcessor 사용 지정
    annotationProcessor "jakarta.annotation:jakarta.annotation-api" // java.lang.NoClassDefFoundError (javax.annotation.Generated) 대응 코드
    annotationProcessor "jakarta.persistence:jakarta.persistence-api" // java.lang.NoClassDefFoundError (javax.annotation.Entity) 대응 코드

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.0.2'
    testImplementation 'org.springframework.security:spring-security-test:5.6.7'
}
// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [ generated ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}
tasks.named('test') {
    useJUnitPlatform()
}